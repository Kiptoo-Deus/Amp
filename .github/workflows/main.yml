name: Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up CMake
      uses: jwlawson/actions-setup-cmake@v1

    - name: Set up JUCE dependencies (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libasound2-dev \
          libx11-dev \
          libxcomposite-dev \
          libxcursor-dev \
          libxext-dev \
          libxinerama-dev \
          libxrandr-dev \
          libxrender-dev \
          libfreetype6-dev \
          libwebkit2gtk-4.0-dev \
          libcurl4-gnutls-dev

    - name: Configure CMake
      run: cmake -B build -DCMAKE_BUILD_TYPE=Release

    - name: Build
      run: cmake --build build --config Release

    - name: Make output directory
      run: mkdir -p ${{ github.workspace }}/artifacts

    - name: Copy build artifacts (Linux)
      if: runner.os == 'Linux'
      run: |
        cp -r build/*.so ${{ github.workspace }}/artifacts/
        cp -r build/*.a ${{ github.workspace }}/artifacts/

    - name: Copy build artifacts (macOS)
      if: runner.os == 'macOS'
      run: |
        cp -r build/*.dylib ${{ github.workspace }}/artifacts/
        cp -r build/*.a ${{ github.workspace }}/artifacts/

    - name: Copy build artifacts (Windows)
      if: runner.os == 'Windows'
      run: |
        cp -r build\\Release\\*.dll ${{ github.workspace }}\\artifacts\\
        cp -r build\\Release\\*.lib ${{ github.workspace }}\\artifacts\\

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts
        path: ${{ github.workspace }}/artifacts
